#include <cassert>
#include <cstdlib>
#include "CodeGen_Bash.h"
#include "Compile.h"
#include "Config.h"
#include "Parser.h"
#include "Util.h"

using namespace Bish;

namespace {

// Return the path to the standard library. This allows setting the
// path via BISH_STDLIB to override the default.
std::string get_stdlib_path() {
    char *stdlib = std::getenv("BISH_STDLIB");
    if (stdlib) {
        std::string abs = abspath(stdlib);
        assert(!abs.empty() && "Unable to resolve path specified in BISH_STDLIB.");
        return abs;
    } else {
        return STDLIB_PATH;
    }
}

// Add necessary stdlib functions to the given module.
void link_stdlib(Bish::Module *m) {
    Parser p;
    Module *stdlib = p.parse(get_stdlib_path());
    m->import(stdlib);
}

}

void Bish::compile_to_bash(std::ostream &os, Module *m) {
    link_stdlib(m);
    os << "#!/usr/bin/env bash\n";
    os << "# Autogenerated script, compiled from the Bish language.\n";
    os << "# Bish version " << BISH_VERSION << "\n";
    os << "# Please see " << BISH_URL << " for more information about Bish.\n\n";
    CodeGen_Bash compile(os);
    m->accept(&compile);
}
